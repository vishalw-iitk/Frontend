SPECIFICITY

1. Specificity is a common reason why your CSS-rules don't apply to some elements, although you think they should.
2. Every selector has its own place in the specificity hierarchy
3. Inline styles, IDs, classes, attributes, pseudo-classes, elements, pseudo-elements
4. Inline stlyes : <h1 style="color: #ffffff;"> (1000)
5. #idname{} (100)
6. classes : .classname{}                       (10)
7. attributes : [attributes]{}
8. pseudo-classes :   :hover{}, :focus{}
9. elements : h1{}                              (1)
10. pseudo-elements :   ::before{}, ::after{}

Equal specificity score => select the one which is written later/ at the end of css stylesheet
div#a => 1(element) + 100(id) = 101 WINS
#a =>  100(id) = 100
div[id=a] => 1(element) + 10(attributed-id) = 11

internal style CSS will be applied over external style CSS

--------------------
margin or border etc
4 values => clockwise
3 values => top , side, bottom
2 values => top-bottom , left-right
1 value => all

margin : auto IS USED TO HORIZONTALLY CENTRE THE element
------------------------
MARGIN INHERITING PROPERTY USING THE KEYWORD inherit

div {
  border: 1px solid red;
  margin-left: 100px;
}

p.ex1 {
  margin-left: inherit;
}

inner div or 1st div really doesn't work or works ??
https://www.w3schools.com/css/tryit.asp?filename=trycss_margin-left_inherit

WHEN BOTTOM MARGIN OF 1 ELEMENT COLLAPSES WITH TOP MARGIN OF ANOTHER THEN THEY COLLPASE ONLY. means instead of 20+50 = 70margin. We get max(20,50) = 50 margin
-----------------------------------

BOX MODEL : width, border, padding, margin
https://www.w3schools.com/css/css_boxmodel.asp
--------------------------------------------------

HEIGHT OF A BLOCK/ELEMENT:
The height of a block element defaults to the height of the block's content. So, given something like this:
<div id="outer">
    <div id="inner">
        <p>Where is pancakes house?</p>
    </div>
</div>
#inner will grow to be tall enough to contain the paragraph and #outer will grow to be tall enough to contain #inner.
When you specify the height or width as a percentage, that's a percentage with respect to the element's parent. 
WIDTH BY DEFAULT IS FULL SPAN AND HEIGHT DEPENDS ON THE SIZE OF THE CONTENT. SO FULL SPAN CAN BE RESIZED TO HALF, 25%, ETC ETC
BUT WHEN HEIGHT DEPENDS ON THE CONTENT SIZE THEN % VALUE OF HEIGHT WILL NOT DO ANYTHING. WE HAVE APPLY SPECIFIC VALUE OF HEIGHT TO SEE THE HEIGHT RESULT.
-----------------------------
WIDTH VS MAX-WIDTH
scrollbar at the bottom of the window is added when the window size is decreased with <p>'s width=700px. Font size no effect.
If width is set to 50% then scrollbar is not added and the element gets 50% of the shrinked window. Inside content are arjusted inside the element withthe same font size.
max-width=50 % results same like width=50%
max-width=700px is different now. The element width is fixed to 700px as expected, but instead of adding the scrollbars, we get the adjusted content in the same element with no penalty over font-size
--------------------------------------------
HEIGTH VS MAX-HEIGHT and OVERFLOW:AUTO
If you go on witing the content in the element then the height of the content will grow as we don't penalize the font-size. Correct.
Now if we fix the height of the element to height=50px or max-height=50px and if the content is smaller to get adjusted inside it then alright, no issue. But if the content is bigger then height and max-height values won't have any effect and the content will just get out of the element.
So by addidng overflow : auto , we make the scrollbar equal to the height/max-height of element so all the contents are limited to the height of that element's height/max-height and will be accessible via scrollbar.
NOW THE MAIN DIFFERENCE IS THAT height:700px occupies the height of 700px even if it is unutilized and max-height=700px DOESN'T OCCUPY THE HEIGHT OF 700PX IF THE CONTENT IS NOT FULLY OCCUPIED. max-width occupies less height if the content is lesser.
------
Seems like min-height behaves like height. Even if the content is smaller, min-height still occupies the larger height if larger height was aloted. Same happens with height as well what I remember.
Now min-width as well, even if the content is smaller, that element continue to occupy the min-width
--------
OUTLINE. It is drwan outside the border. outline size is not included in calculating the element dimension.
property = outline-style: same as border styles
property = outline-color
property = outline-width
property = outline: width style color =>shorthand notation
property = outline-offset : 15px => outline grows by 15px from all the direction.
-------
