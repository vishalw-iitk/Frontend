SPECIFICITY

1. Specificity is a common reason why your CSS-rules don't apply to some elements, although you think they should.
2. Every selector has its own place in the specificity hierarchy
3. Inline styles, IDs, classes, attributes, pseudo-classes, elements, pseudo-elements
4. Inline stlyes : <h1 style="color: #ffffff;"> (1000)
5. #idname{} (100)
6. classes : .classname{}                       (10)
7. attributes : [attributes]{}
8. pseudo-classes :   :hover{}, :focus{}
9. elements : h1{}                              (1)
10. pseudo-elements :   ::before{}, ::after{}

Equal specificity score => select the one which is written later/ at the end of css stylesheet
div#a => 1(element) + 100(id) = 101 WINS
#a =>  100(id) = 100
div[id=a] => 1(element) + 10(attributed-id) = 11

internal style CSS will be applied over external style CSS

--------------------
margin or border etc
4 values => clockwise
3 values => top , side, bottom
2 values => top-bottom , left-right
1 value => all

margin : auto IS USED TO HORIZONTALLY CENTRE THE element
------------------------
MARGIN INHERITING PROPERTY USING THE KEYWORD inherit

div {
  border: 1px solid red;
  margin-left: 100px;
}

p.ex1 {
  margin-left: inherit;
}

inner div or 1st div really doesn't work or works ??
https://www.w3schools.com/css/tryit.asp?filename=trycss_margin-left_inherit

WHEN BOTTOM MARGIN OF 1 ELEMENT COLLAPSES WITH TOP MARGIN OF ANOTHER THEN THEY COLLPASE ONLY. means instead of 20+50 = 70margin. We get max(20,50) = 50 margin
-----------------------------------

BOX MODEL : width, border, padding, margin
https://www.w3schools.com/css/css_boxmodel.asp
--------------------------------------------------

HEIGHT OF A BLOCK/ELEMENT:
The height of a block element defaults to the height of the block's content. So, given something like this:
<div id="outer">
    <div id="inner">
        <p>Where is pancakes house?</p>
    </div>
</div>
#inner will grow to be tall enough to contain the paragraph and #outer will grow to be tall enough to contain #inner.
When you specify the height or width as a percentage, that's a percentage with respect to the element's parent. 
WIDTH BY DEFAULT IS FULL SPAN AND HEIGHT DEPENDS ON THE SIZE OF THE CONTENT. SO FULL SPAN CAN BE RESIZED TO HALF, 25%, ETC ETC
BUT WHEN HEIGHT DEPENDS ON THE CONTENT SIZE THEN % VALUE OF HEIGHT WILL NOT DO ANYTHING. WE HAVE APPLY SPECIFIC VALUE OF HEIGHT TO SEE THE HEIGHT RESULT.
-----------------------------
WIDTH VS MAX-WIDTH
scrollbar at the bottom of the window is added when the window size is decreased with <p>'s width=700px. Font size no effect.
If width is set to 50% then scrollbar is not added and the element gets 50% of the shrinked window. Inside content are arjusted inside the element withthe same font size.
max-width=50 % results same like width=50%
max-width=700px is different now. The element width is fixed to 700px as expected, but instead of adding the scrollbars, we get the adjusted content in the same element with no penalty over font-size
--------------------------------------------
HEIGTH VS MAX-HEIGHT and OVERFLOW:AUTO
If you go on witing the content in the element then the height of the content will grow as we don't penalize the font-size. Correct.
Now if we fix the height of the element to height=50px or max-height=50px and if the content is smaller to get adjusted inside it then alright, no issue. But if the content is bigger then height and max-height values won't have any effect and the content will just get out of the element.
So by addidng overflow : auto , we make the scrollbar equal to the height/max-height of element so all the contents are limited to the height of that element's height/max-height and will be accessible via scrollbar.
NOW THE MAIN DIFFERENCE IS THAT height:700px occupies the height of 700px even if it is unutilized and max-height=700px DOESN'T OCCUPY THE HEIGHT OF 700PX IF THE CONTENT IS NOT FULLY OCCUPIED. max-width occupies less height if the content is lesser.
------
Seems like min-height behaves like height. Even if the content is smaller, min-height still occupies the larger height if larger height was aloted. Same happens with height as well what I remember.
Now min-width as well, even if the content is smaller, that element continue to occupy the min-width
--------
OUTLINE. It is drwan outside the border. outline size is not included in calculating the element dimension.
property = outline-style: same as border styles
property = outline-color
property = outline-width
property = outline: width style color =>shorthand notation
property = outline-offset : 15px => outline grows by 15px from all the direction.
-------
TEXT edits
text-align : centre
text-align : left
text-align : right
text-align : justify => like newspaper content. Stretched-out every line at both end

To change the text direction:
direction: rtl; //creates mirror view
unicode-bidi: bidi-override; //shifts at the right corner. both work combinely

vertical-align: bottom; //top, middle, bottom

text-decoration : none;
text-decoration: overline;
text-decoration: underline;
text-decoration: line-through;

text-transform: capitalize;
text-transform: uppercase;
text-transform: lowercase;

text-indent: 50px; // To specify the indent of the first line of the text

letter-spacing: 3px;
letter-spacing: -3px;

line-height: 0.8; //to specify the spacing between lines
line-height: 1.8;

word-spacing: 10px; //to specify spacing between words
word-spacing: -5px;

white-space: nowrap; //eliminates the extraspacces than required of 1

text-shadow: 2px 2px red;
text-shadow: 2px 2px 5px red;
-------------
FONT-FAMILY
If the font name is more than one word, it must be in quotation marks, like: "Times New Roman".
The font-family property should hold several font names as a "fallback" system, to ensure maximum compatibility between browsers/operating systems. Start with the font you want, and end with a generic family (to let the browser pick a similar font in the generic family, if no other fonts are available). The font names should be separated with comma.
font-family: "Times New Roman", Times, serif;
May not be best, but the following are safe fonts almost
The following list are the best web safe fonts for HTML and CSS:
Arial (sans-serif)
Verdana (sans-serif)
Helvetica (sans-serif)
Tahoma (sans-serif)
Trebuchet MS (sans-serif)
Times New Roman (serif)
Georgia (serif)
Garamond (serif)
Courier New (monospace)
Brush Script MT (cursive)

FONT-STYLE
font-style: normal;
font-style: italic;
font-style: oblique;

font-weight: normal;
font-weight: bold;

font-variant: small-caps;
font-variant: normal;

FONT-SIZE
If you do not specify a font size, the default size for normal text, like paragraphs, is 16px
(1em=16px)
font-size: 40px;
font-size: 14px;
font-size: 100%; //means 100% is actual/defualt font-size. If we do do 90% then it decreases and if we do 120% then it increases.
if we put negative font-size then default value is accepted.
font-size: 3vw; //viewport-width means responsive text which also depends on the width of the window. If the window is small then texts are small and if window is increased then texts become large enough to come out of the element block.
With overflow: auto, we can put the large enough contents wrapped by a scrollbars of the element size.
Viewport is the browser window size. 1vw = 1% of viewport width. If the viewport is 50cm wide, 1vw is 0.5cm.

GOOGLE FONTS CAN BE USED BY PUTTING THE GOOGLE FONT URL IN THE HEAD tag
make sure to add family=Sofia || family=Audiowide || family=Trirong  in the link tag of google-font URL

To use GOOGLE FONT EFFECTS we have to special add class="font-effect-effectname" eg:class="font-effect-effectname"
It is like a bootstrap only, adding a class n all. Also in the url we have to add  => &effect=effectname eg:- &effect=fire
For multiple effects do this : family=Sofia&effect=neon|outline|emboss|shadow-multiple

FONT PAIRING FOR HEADING AND PARAGRAPH
Georgia and Verdana  // Use the "Georgia" font for headings, and "Verdana" for text
Helvetica and Garamond
Popular Google Font Pairings : Merriweather and Open Sans |  Ubuntu and Lora  |  Abril Fatface and Poppins|  Cinzel and Fauna One |  Fjalla One and Libre Baskerville |  Space Mono and Muli |  Spectral and Rubik |  Oswald and Noto Sans

example of SHORTHAND NOTATION : font: italic small-caps bold 12px/30px Georgia, serif;
--------------------------------
ICONS =>font awesome
We need to add a js path in a script tag, We have to sign up for font-awesome serverce. Then we can use the following like classes to get the icon. We get the code after signup which we have to paste in the script tag
Add in the tags like <i> or <span>
class="fas fa-cloud"
class="fas fa-car"
class="fas fa-heart"
class="fas fa-file"
class="fas fa-bars"
---------------------------
CSS LINKS
The four links states are: <a>This is a link</a> is an anchor tag
    a:link - a normal, unvisited link
    a:link {
        color: red;
    }
a:visited - a link the user has visited
a:visited {
  color: green;
}
    a:hover - a link when the user mouses over it
    a:hover {
        color: hotpink;
    }
a:active - a link the moment it is clicked
a:active {
  color: blue;
}
....
standard link style I GUESS : hotpink
a {
  color: hotpink;
}
.....
RULESSSSSS
When setting the style for several link states, there are some order rules:
a:hover MUST come after a:link and a:visited
a:active MUST come after a:hover
.....
TEXT-DECORATION ON SUCH LINKS
eg : a:hover {
        text-decoration: underline;
    }
...
BACKGROUND COLOR ON SUCH LINKS
a:active {
  background-color: hotpink;
}
....
WE CAN COMBINE THE PROPERTIES AS WELL. eg: a:hover, a:active{} || a:link, a:visited {}
...
WE CAN ALSO SET THE CURSOR FOR SUCH LINKS
eg: cursor : auto;
    cursor : default;
----------------------------------------------
LISTS
two type : unordered and ordered
FOR UNORDERED
list-style-type: circle;
list-style-type: sqaure;
list-style-type: upper-roman;
list-style-type: lower-alpha;

similarly,....we can add image
list-style-image: url('sqpurple.gif');

LIST STYLE POSITIONS
list-style-position: outside;
"list-style-position: outside;" means that the bullet points will be outside the list item. The start of each line of a list item will be aligned vertically.
list-style-position: inside;
"list-style-position: inside;" means that the bullet points will be inside the list item. As it is part of the list item, it will be part of the text and push the text at the start

Remove Default Settings
i.e. The list with no bullests and all. Bu the list has default margin and padding, so we have to remove them.
list-style-type: none;
margin: 0;
padding: 0;

LIST SHORTHAND NOTATION
list-style : list-style-type list-style-position list-style-image;
-----------------------------------------------------------------------
CSS TABLES
<table>
    <tr>
        <th></th>      //headers-columns(name) of a table 
        <th></th>
    </tr>
    <tr>
        <tr></tr>       //normal columns of a row
        <tr></tr>
    </tr>
    <tr>
        <tr></tr>       //normal columns of a row
        <tr></tr>
    </tr>
</table>

table, th, td {
  border: 1px solid black;  //double border is default
}
table{
    border-collapse: collapse; //for a single border
}

table {
  width : 100%;
}

table { //only outer border of the table is manipulated
  border: 1px solid black;
}
WE CAN TELL HOW THE CONTENTS OF A CELL SHOULD BE aligned
td {
  text-align: center;
}
td {
  height: 50px;
  vertical-align: bottom;
}

TO DESIGN ONLY THE INNER STYLES/ LINES IN A TABLE,
th, td {  //Table outer border is not drawn
  border-bottom: 1px solid #ddd;
}

HOVER PROPERTIES CAN BE ADDED TO TABLE, ROWS, columns

JUST LIKE WE ADD HOVER, WE CAN ADD ZEBRA STRIPS AS WELL
tr:nth-child(even) { // SETTING THE STYLE FOR EVEN ROWS ONLY
    background-color: #f2f2f2;
}

IF THE CONTENTS OF THE TABLE ARE NOT ADJUSTABLE TO THE CURRENT WIDTH THEN SCROLL-BAR IS ADDED AT THE BOTTOM OF THE TAB.
IF WE ADD style="overflow-x:auto;" the scroll-bar will be added at the bottom of the table
------------------------------------------------------------------
DISPLAY
display : inline; => takes only as much space require. in a stright line
Inline elements don't start on a new line. They don't get stretched out wide. Takes only limited width as required.
eg:- <a></a> |  <span></span>  | <img></img>

display : block; => block results in a line break.
block elements are stretched out to full width by default. They start at a new line
eg:- div, p, h1, form, header, section, etc..

display:none; => removes the element

visibility:hidden; => occupies the alloted space. But is not visible.
------------------------------------------------------------------------
POSITION
position:static; => It means an element will be positioned based on the normal flow of HTML
position:relative; => It is just like static but in relative we can move our element to left, right, top or bottom
                      so relative positioning means relative to its normal/static position how we we want our element want to move. While doing this, an element can overlap other element.
position:absolute; => In this case an element with position:absolute will search for some parent element whose position is other than static.
      If it founds out some parent other than static then the positions like top, left, bottom, right etc. will be set based on that parent element.
      If the parent other than static is not found then it goes to the very broad out element like html or body and will set the position based on that.
      left, top, right, bottom positioning is just like position:relative but in position:absolute we do it with respect to some parent.
      If none of top, left, right, bottom is mentioned then the element holds its original position such that it is only visible to the extend of its content and not the full width. And other css element ignores it and overlaps the absolute element with the content of absolute element visible.
position:fixed; => Parent is always the html tag. All the positioning will be taking place w.r.t html/body tag
      Even after we scroll, the position on the screen will be still w.r.t body tag/ our current screen. Mean it will always be visible on the screen no matter how much we scroll.
position:sticky; => It is a combination of relative and fixed.
      Relative because till the time the element does not collide anywhere it will act as relative. For collision we can provide top, left, right, bottom value which will be implemented once the top, left bottom, right value of that element is reached by means of scrolling.
      Fixed because, once it gets collide, then it sticks there and stay there even if we scroll in the colliding diention.
z-index: -1;  => We can add z-index value to mention that whether our element will be below other element or on the top of other element
      ading the opacity will be good
      -1 means element will be place behind
      0 means element will be placed in the front
clip: rect(0px,60px,200px,0px); => allows us to crop the absolutely positioned elements
--------------------------------------------------------------
OVERFLOW
sometimes content overflow the alloted space to it. Content starts coming out of the box.
overflow:visible;  => default. Content can easily come out of the parent element. When the content comes out, we may face overlapping issues because of this.
overflow:hidden;  => The amount of content which comes out of the parent element will be hidden.
overflow:scroll; => It compulsorilty add the scrollbar. If the content exceed the allocted space then the scroll bar will be added to that element and whole element can be accessed by scrolling.
overflow:auto; => scrollbar is added only when necessary.
overflow-x:scroll/hidden  we decide for HORIZONTAL
overflow-y:scroll/hidden  we decide for VERTICAL
------------------------------------------------------
FLOAT
float:right; element occupies whole right side of the container.
float:left;
float:none;
float is inheritible

CLEAR
After any floating element is added the we can face overlapping(of block, not content) issues after we add some other element below it(not child)
To avoid this overlapping of block, we add clear:left | clear:right | clear:both to the upcoming element after float and hence the upcoming element is added may be on the new line. clear left means upcoming element cannot tolerate float elements on its left side and is ready to move may be on the next line

CLEARFIX
If the float child element is bigger than its content then overflow:auto will help out in getting the container block equal to the size of the float element.
If we have the fixed size then again scrollbar will be added.
--------------------------------------------------------

