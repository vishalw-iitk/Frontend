{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","CurrencyOptions","selectedCurrency","onchangeCurrency","amount","onchangeAmount","type","value","className","onChange","map","option","BASE_URL","App","fromAmount","toAmount","useState","setCurrencyOptions","fromCurrency","setfromCurrency","toCurrency","settoCurrency","exchangerate","setExchangerate","setAmount","amountfromInCurrency","setfromInCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAGe,SAASA,EAAYC,GAAQ,IAEpCC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,iBACAC,EAEAJ,EAFAI,OACAC,EACAL,EADAK,eAGJ,OACI,gCACI,uBAAOC,KAAK,SAASC,MAAOH,EAAQI,UAAU,QAAQC,SAAUJ,IAChE,wBAAQE,MAAOL,EAAkBO,SAAUN,EAA3C,SACKF,EAAgBS,KAAI,SAAAC,GAAM,OACvB,wBAAqBJ,MAAOI,EAA5B,SAAqCA,GAAxBA,WCbjC,IAAMC,EAAW,yCAmFFC,MAjFf,WAAgB,IAQVC,EAAYC,EARH,EACiCC,mBAAS,IAD1C,mBACNf,EADM,KACWgB,EADX,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,qBAJ3B,mBAINM,EAJM,KAIQC,EAJR,OAKeP,mBAAS,GALxB,mBAKNZ,EALM,KAKEoB,EALF,OAMqCR,oBAAS,GAN9C,mBAMNS,EANM,KAMgBC,EANhB,KAwDb,OA/CGD,GACDX,EAAaV,EACbW,EAAWX,EAASkB,IAGpBP,EAAWX,EACXU,EAAaV,EAASkB,GAWxBK,qBAAU,WACRC,MAAMhB,GACLiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgB,YAAIC,OAAOC,KAAKH,EAAKI,QAAQ,GACnDnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE5B,IAYHN,qBAAU,WACW,MAAhBT,GAAsC,MAAdE,GACzBQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IACjDS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKI,MAAMhB,SAE1C,CAACF,EAAcE,IAGhB,qCACD,oDACA,cAACrB,EAAD,CACAE,gBAAiBA,EACjBC,iBAAkBgB,EAClBf,iBAAkB,SAAAmC,GAAC,OAAInB,EAAgBmB,EAAEC,OAAOhC,QAChDH,OAAQU,EACRT,eA1BD,SAA0BiC,GACxBd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAkB,MA0BnB,qBAAKlB,UAAU,QAAf,eACA,cAACT,EAAD,CACAE,gBAAiBA,EACjBC,iBAAkBkB,EAClBjB,iBAAkB,SAAAmC,GAAC,OAAIjB,EAAciB,EAAEC,OAAOhC,QAC9CH,OAAQW,EACRV,eA7BD,SAAwBiC,GACtBd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAkB,MA6BnB,uBACA,uBACA,uDC9EHc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.094d0a8a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default function CurrencyRow(props) {\r\n    const {\r\n        CurrencyOptions,\r\n        selectedCurrency,\r\n        onchangeCurrency,\r\n        amount,\r\n        onchangeAmount\r\n    } = props\r\n    // console.log(CurrencyOptions)\r\n    return (\r\n        <div>\r\n            <input type=\"number\" value={amount} className=\"input\" onChange={onchangeAmount}/>\r\n            <select value={selectedCurrency} onChange={onchangeCurrency}>\r\n                {CurrencyOptions.map(option => (\r\n                    <option key={option} value={option}>{option}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\n\nfunction App() {\n  const [CurrencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setfromCurrency] = useState()\n  const [toCurrency, settoCurrency] = useState()\n  const [exchangerate, setExchangerate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountfromInCurrency, setfromInCurrency] = useState(true)\n  \n  let fromAmount, toAmount\n  if(amountfromInCurrency){\n    fromAmount = amount\n    toAmount = amount * exchangerate\n  }\n  else{\n    toAmount = amount\n    fromAmount = amount / exchangerate\n  }\n\n  // useEffect(function setAmount(){\n  //   if(fromAmount != null && toAmount != null){\n      \n  //   })\n\n  // console.log(CurrencyOptions)\n\n\n  useEffect(() => {\n    fetch(BASE_URL)\n    .then(res => res.json())\n    .then(data => {\n      const firstCurrency = [...Object.keys(data.rates)][0]\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n      setfromCurrency(data.base)\n      settoCurrency(firstCurrency)\n      setExchangerate(data.rates[firstCurrency])\n    })\n  }, [])\n\n  function handlefromAmount(e){\n    setAmount(e.target.value)\n    setfromInCurrency(true)\n  }\n\n  function handletoAmount(e){\n    setAmount(e.target.value)\n    setfromInCurrency(false)\n  }\n\n  useEffect(() => {\n    if(fromCurrency != null && toCurrency != null){\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then(res => res.json())\n      .then(data => setExchangerate(data.rates[toCurrency]))\n    }\n  }, [fromCurrency, toCurrency])\n\n  return (\n    <>\n   <h1>Currency Converter</h1>\n   <CurrencyRow \n   CurrencyOptions={CurrencyOptions}\n   selectedCurrency={fromCurrency}\n   onchangeCurrency={e => setfromCurrency(e.target.value)}\n   amount={fromAmount}\n   onchangeAmount={handlefromAmount}\n   />\n   <div className=\"equal\">=</div>\n   <CurrencyRow \n   CurrencyOptions={CurrencyOptions}\n   selectedCurrency={toCurrency}\n   onchangeCurrency={e => settoCurrency(e.target.value)}\n   amount={toAmount}\n   onchangeAmount={handletoAmount}\n   />\n   <br></br>\n   <br></br>\n   <h3>- Vishal Waghmare</h3>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}